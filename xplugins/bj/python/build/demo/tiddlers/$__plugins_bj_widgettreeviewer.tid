author: Jeffrey Wilkinson (BJ)
core-version: >=5.0.13
created: 20160130202553829
dependents: 
description: 
modified: 20160130202553829
plugin-type: plugin
source: https://github.com/buggyj/TW5-jsoneditor/tree/widget-tree-viewer
title: $:/plugins/bj/widgettreeviewer
type: application/json
version: 0.0.1

{
    "tiddlers": {
        "$:/config/EditorTypeMappings/application/json": {
            "title": "$:/config/EditorTypeMappings/application/json",
            "text": "json"
        },
        "$:/plugins/bj/WidgetTreeViewer/edit-json.js": {
            "text": "/*\\\ntitle: $:/plugins/bj/WidgetTreeViewer/edit-json.js\ntype: application/javascript\nmodule-type: widget\n\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar MIN_TEXT_AREA_HEIGHT = 100; // Minimum height of textareas in pixels\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\nvar newid=0;\nvar EditJsonWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n};\nif($tw.browser) {\n\tvar JSONeditor=require(\"$:/plugins/bj/WidgetTreeViewer/JSONeditor.js\").JSONeditor;\n}\n/*\nInherit from the base widget class\n*/\nEditJsonWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nEditJsonWidget.prototype.render = function(parent,nextSibling) {\n\tvar self = this;\n\t// Save the parent dom node\n\tthis.parentDomNode = parent;\n\t// Compute our attributes\n\tthis.computeAttributes();\n\t// Execute our logic\n\tthis.execute();\n\t// Create our element\n\tvar domNode = this.document.createElement(\"div\");\n\tvar domNode2 = this.document.createElement(\"div\");\n\n\n\tvar domNode2 = this.document.createElement(\"div\");\n\tdomNode.innerHTML = '<div style=\"font-size: 11px; font-family: Verdana,Arial,Helvetica,sans-serif;\" id=\"jsoneditortree'+newid+'\"></div>';\n\tdomNode2.innerHTML \t=\tthis.formHTML;\n\t\n\t// Insert the element into the DOM\n\tparent.insertBefore(domNode2,nextSibling);\n\tparent.insertBefore(domNode,domNode2);\n\n\tthis.instance=JSONeditor.start('jsoneditortree'+newid,domNode2.firstChild.firstChild,this.root,\n\t\t\t\t\t\t\t\t\t'$:/plugins/bj/WidgetTreeViewer/',this.format,this.items);\n\tvar instance = this.instance;\n\n\tnewid++;\n\tthis.domNodes.push(domNode);\n\tthis.domNodes.push(domNode2);\n\tif(this.postRender) {\n\t\tthis.postRender();\n\t}\n\tthis.formsetup(domNode2.firstChild);\n};\n\nEditJsonWidget.prototype.formHTML=\t\n\t'<div style=\"font-size: 11px; font-family: Verdana,Arial,Helvetica,sans-serif;\" \">'+\n\t\"<form name=\\\"jsoninput\\\" >\"\t+\n\t\"\\nLabel:<br>\"+\n\t\"<input name=\\\"jlabel\\\" type=\\\"text\\\" value=\\\"\\\" size=\\\"60\\\" style=\\\"width:400px\\\">\"+\n\t\"<br><br>\\nValue: <br>\"+\n\t\"<textarea name=\\\"jvalue\\\" rows=\\\"10\\\" cols=\\\"50\\\" style=\\\"width:400px\\\"></textarea>\"+\n\t\"</form></div>\";\n\t\t\t\t\nEditJsonWidget.prototype.formsetup = function(f) {\n\tvar instance = this.instance\n\tvar fs=f.style\n\tfs.fontSize=fs.fontSize=\"11px\"\n\tfs.fontFamily=fs.fontFamily=\"Verdana,Arial,Helvetica,sans-serif\"\n\tvar e=f.getElementsByTagName(\"*\");\n\tfor(var i=0;i<e.length;i++){\n\t\tvar s=e[i].style\n\t\tif(!!s){\n\t\t\ts.fontSize=\"11px\"\n\t\t\ts.fontFamily=\"Verdana,Arial,Helvetica,sans-serif\"\n\t\t}\n\t\tvar cb= e[i].name\n\t\tif (!!cb ) switch (cb) {\n\n\t\t\tdefault:\n\t\t\t//e[i].style.display = 'none';\n\t\t}\n\t}\n}\n/*\nCompute the internal state of the widget\n*/\nEditJsonWidget.prototype.execute = function() {\n\t// Get our parameters\n\tvar n=0, name = this.getAttribute(\"name\",\"treedebug\");\n\tthis.widget=null;\n\tvar self = this;\n\tthis.root = $tw.rootWidget;\n\tvar find = function (children) {\n\t\t$tw.utils.each(children,function(childWidget) {\n\t\t\tif (!childWidget) return;\n\t\t\tif (childWidget.parseTreeNode && childWidget.parseTreeNode.type == \"set\" ) {\n\t\t\t\tif (childWidget.parseTreeNode.attributes.name.value == name\n\t\t\t\t\t&& childWidget.parseTreeNode.attributes.value.value == name\n\t\t\t\t\t) {self.widget = childWidget;return}\n\t\t\t}\n\t\t\tfind (childWidget.children);\t\n\t\t});\n\t}\n\tfind(this.root.children)\t\n\tthis.root = self.widget||$tw.rootWidget;\n\tthis.items = JSON.parse(this.getAttribute(\"items\",\"[]\"));\n\tthis.onkeyupdate = \"no\"; \n\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nEditJsonWidget.prototype.refresh = function(changedTiddlers) {\n\treturn false;\n};\n\n\nexports[\"widget-tree-viewer\"] = EditJsonWidget;\n\n})();\n",
            "title": "$:/plugins/bj/WidgetTreeViewer/edit-json.js",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/bj/WidgetTreeViewer/docNode.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/docNode.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///yH5BAEAAA8AIf4cVWxlYWQgR0lGIFNtYXJ0U2F2ZXIgVmVyIDIuMAAsAAAAABAAFgBABCDwyUmrvTjrzbv/YChywFd6Z5eST+m217rJGp3ZGB5jEQA7"
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeLastFirst.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeLastFirst.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWAPcLAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wsALAAAAAAQABYAAAhFABcIHEiwoMGDCBMqXMiwIICHECEeBDCxosB/Ayka1LgAo0COBCn+GzlyAcWTGQd6NGmxY8qNLUNGjNiwps2bOHPq3BkQADs="
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeLast.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeLast.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///yH5BAEAAAEALAAAAAAQABYAAAQvMMhJq5Xg6n0z/xUgjmNnWl4gTCmVrpgpzHOQ3ewE26eaoz0XiQQqGo/IpHKpiQAAOw=="
        },
        "$:/plugins/bj/WidgetTreeViewer/doc.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/doc.gif",
            "module-type": "library",
            "text": "R0lGODlhGAAWAPcAAP39/vf//+f3/+fv9+fv7+fn597v/9bv/9bn98zs/87n/8bn/97n78be/87W/73e/7XW/63W/6XW/73O/63O97XG562197W956W13qWt1pyl1oSl3oSczoyUvWb//2bM/2ut50Kl93uUxnuEzkKM1jOZ/3OEvTMzzGtzpWZmmTMAmWNjYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///ywAAAAAGAAWAEAIxgD/CRxIsKDBghsAqDjB8ICKhwoqrDhI0ASChyooUIjAUcKFiRQFJgQAIEBJABtAgAwpkEMBjDAzTljJsqbNmywTqvCQIMUBBA4cWLBA8+CGADExPphZcwSDpBAoTKBQ9OCKq1izXsXJ1eCGr2DBVqWYsITZEgEGhAhBYixChR8+pCggwIABBR9rHh0w4OeBnwoaSNRLwC6CAw0CL6AwmKUIBocRLEgMISrVmiYYKFAwmUJlCh7dDkSBIYOG06hPdxDdtTXXgAA7"
        },
        "$:/plugins/bj/WidgetTreeViewer/docNodeLastFirst.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/docNodeLastFirst.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///yH5BAEAAA8ALAAAAAAQABYAQAQY8MlJq7046827/2AojmQJAg+qpmbrvlIEADs="
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeOpen.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeOpen.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAAAAAAAAAAAAP///yH5BAEAAAsALAAAAAAQABYAAAQucMlJq5Xg6n0z/xUgjmNnWl54qugivO+SzVNK2fV66zVJgkBMcCgkBnHGDVISAQA7"
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeOpenLastFirst.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeOpenLastFirst.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWAPcLAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wsALAAAAAAQABYAAAg8ABcIHEiwoMGDCBMqXMiwIICHECEeBDCxokGKFy06XPCvY8cFFEMOxLgxo8mSKAlGXNmwpcuXMGPKnBkQADs="
        },
        "$:/plugins/bj/WidgetTreeViewer/docNodeLast.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/docNodeLast.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///yH5BAEAAA8AIf4cVWxlYWQgR0lGIFNtYXJ0U2F2ZXIgVmVyIDIuMAAsAAAAABAAFgBABBvwyUmrvTjrzbv/YChywFd6Z5eST+m2YyzPXgQAOw=="
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNode.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNode.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAAAAAAAAAAAAP///yH5BAEAAAsALAAAAAAQABYAAAQycMlJq5Xg6n0z/xUgjmNnWt4iTCmVrpgpzPOS3ewE26eaoz0XiQQqxoxIXtLYWnKakwgAOw=="
        },
        "$:/plugins/bj/WidgetTreeViewer/folder.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folder.gif",
            "module-type": "library",
            "text": "iVBORw0KGgoAAAANSUhEUgAAABYAAAAYCAYAAAD+vg1LAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAARwAAAEcBRwD1sgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGbSURBVEiJ1dU/SAJRAMfx987wCO4WkxYV827WSRzEQQ3pEHTwhjgkkXBzieaCoIgassmgIaIxCoK2i4y2czChu8dxouhQ20055XC+phskzT+dg9/5x4e3vPcgxhjMI2Iu6uLC8Xh8P5lM7kAIbZbCbrfbkU6nz4vFYjUajW5ZBgMAAEEQIBAIBHmevykUCs/hcHjDEtiMJEkYCoXWeZ5/zOVy936/P2gJbEbTtD0SifCCILwIgnDl9XoZS2Azp9NJx2Kx7Xw+L2UymTOPx+OwBDZzuVyrHMftZrPZt1QqtQchtP+1X5oUNmMYZs3n8x2yLLvJcVxZFMVLPORdmOmCQAgBRVErBEGwAIDlYZupT6zr+peiKLe1Wu2o1Wp9jNpNDHe73R5C6EGW5ZN6vf4+bj8W7vV6fYTQkyzLp5IkvU56kJGwYRgAIVTVNK1UqVTuJgVHwhhj0Gg0NFVVy6IoXmCM+9Oiv+B2u/2pquq1oijHnU7nexbQDGKMQSKRKFEURSKEDprNpv4fcACGENowxoYV4AA8jxbvz/sBfEmVhD06KVsAAAAASUVORK5CYII="
        },
        "$:/plugins/bj/WidgetTreeViewer/vertLine.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/vertLine.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///yH5BAEAAA8AIf4cVWxlYWQgR0lGIFNtYXJ0U2F2ZXIgVmVyIDIuMAAsAAAAABAAFgBABBnwyUmrvTjrzbv/YChywFd6Z5eSZou6KlxFADs="
        },
        "$:/plugins/bj/WidgetTreeViewer/JSONeditor.js": {
            "type": "application/javascript",
            "title": "$:/plugins/bj/WidgetTreeViewer/JSONeditor.js",
            "module-type": "library",
            "text": "/*\njsonEditor 1.02\ncopyright 2007-2009 Thomas Frank\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n(function(){\n\n\nvar JSONeditor={\n\tstart:function(treeDivName,formDivName,json,imagepath,format,items){\n\n\t\treturn new this.treeBuilder(treeDivName,formDivName,json,imagepath,format,items)\n\t}\n}\nexports.JSONeditor=JSONeditor;\n/*\ntreeBuilder v 1.00 + a lot of json stuff added...\ncopyright 2007 Thomas Frank\n*/\nJSONeditor.treeBuilder=function(treeDivName,f,json,imagepath,format,items){\n\tvar self = this,$=this.$\n\tvar s=$(treeDivName).style\n\tthis.items = items;\n\tjson=json||{}\n\t\n\tthis.form = f\n\tthis.forSaving=function(){\n\n\t}\n\tthis.stateMem={}\n\tthis.images={\n\t\tfolderNode:'',\n\t\tfolderNodeOpen:'',\n\t\tfolderNodeLast:'',\n\t\tfolderNodeOpenLast:'',\n\t\tdocNode:'',\n\t\tdocNodeLast:'',\n\t\tfolder:'',\n\t\tfolderOpen:'',\n\t\tdoc:'',\n\t\tvertLine:'',\n\t\tfolderNodeFirst:'',\n\t\tfolderNodeOpenFirst:'',\n\t\tfolderNodeLastFirst:'',\n\t\tfolderNodeOpenLastFirst:'',\n\t\tpath:imagepath,\n\t\tnodeWidth:16\n\t}\n\tthis.format = format;\n\tthis.JSONbuild(treeDivName,json)//sets up the instance \n}\n\n\tJSONeditor.treeBuilder.prototype.$=function(x){return document.getElementById(x)}\n\tJSONeditor.treeBuilder.prototype.preParse=function(x){\n\t\tvar x=x.innerHTML.split(\"\\n\");\n\t\tvar d=[];\n\t\tfor(var i=0;i<x.length;i++){\n\t\t\tif(x[i]){\n\t\t\t\tvar y=x[i].split(\"\\t\");\n\t\t\t\tvar l=0;while(!y[l]){l++};\n\t\t\t\tvar la=y[l]?y[l]:'';l++;\n\t\t\t\tvar t=y[l]?y[l]:'';\n\t\t\t\td.push({level:l,label:la,todo:t});\n\t\t\t}\n\t\t};\n\t\treturn d\n\t}\n\tJSONeditor.treeBuilder.prototype.isArray=function(x){\n\t\treturn x.constructor==Array\n\t}\n\tJSONeditor.treeBuilder.prototype.jSyncTree=function(x){\n\t\tvar d=this.$(this.baseDiv).getElementsByTagName('div')\n\t\tfor(var i=0;i<d.length;i++){\n\t\t\t\n\t\t\tthis.maniClick=\"giveItBack\"\n\t\t\tvar p=d[i].onclick()\n\t\t\tif(p==x){\n\t\t\t\tvar t=d[i]\n\t\t\t\tthis.maniClick=\"selectIt\"\n\t\t\t\tt.onclick()\n\t\t\t\tt=t.parentNode\n\t\t\t\twhile(t.id!=this.baseDiv){if(t.style){this.openAndClose(t.id,\"open\")};t=t.parentNode}\n\t\t\t}\n\t\t}\n\t\tthis.maniClick=false\n\t}\n\tJSONeditor.treeBuilder.prototype.jsonResponder=function(x){\n\t\tthis.jTypeChanged=false\n\t\tthis.jSyncTree(x)\n\t\tvar t=this\n\t\teval(\"var a=this.\"+x)\n\t\teval(\"var ap=this.\"+this.jsonParent(x))\n\t\tvar b=t.JSONstring.make(a)\n\t\tvar t=(a && this.isArray(a))?\"array\":typeof a\n\t\tvar tp=(ap && this.isArray(ap))?\"array\":typeof ap\n\t\tif(a===null){t=\"null\"}\n\t\tvar f=this.form\n\t\tif(t==\"string\"){eval(\"b=\"+b)}\n\t\tf.jlabel.value=x\n\t\tf.jvalue.value=b\n\t}\n\n\tJSONeditor.treeBuilder.prototype.jsonParent=function(x){          \n\t\t// inmproved thanks to \\x000\n\t\tif(x==\"json\"){return \"this\"} \n\t\tif (x.charAt(x.length-1)==']') {return x.substring(0,x.lastIndexOf('['))}                  \n\t\treturn x.substring(0,x.lastIndexOf('.'))     \n\t}\n\tJSONeditor.treeBuilder.prototype.setJsonMessage=function(x){\n\t\tself = this;\n\t\tif (!!this.forSaving)this.forSaving();\n\t\tthis.$('jformMessage').innerHTML=x\n\t\tsetTimeout(\"self.$('jformMessage').innerHTML=''\",1500)\n\t}\n\n\tJSONeditor.treeBuilder.prototype.JSONbuild=function(divName,x,y,z){\n\t\tif(!z){\n\t\t\tthis.partMem=[]\n\t\t\tthis.JSONmem=[]\n\t\t\tthis.json=x\n\t\t\tthis.baseDiv=divName\n\t\t} //if (z==2) return;\n\t\tvar t=(x && this.isArray(x))?\"array\":typeof x\n\t\ty=y===undefined?\"json\":y\n\t\tz=z||0\n\t\tthis.partMem[z]='[\"'+y+'\"]'\n\t\tif(typeof y!=\"number\" && y.replace(/\\w/g,'')===\"\"){this.partMem[z]=\".\"+y}\n\t\tif(typeof y==\"number\"){this.partMem[z]=\"[\"+y+\"]\"}\n\t\tif(z===0){this.partMem[z]=\"json\"}\n\t\tthis.partMem=this.partMem.slice(0,z+1)\n\t\tvar x2=x\n\t\tthis.JSONmem.push({type:t,label:y,todo:this.partMem.join(\"\"),level:z+1})\n\t\tif(t==\"object\"){\n\t\t\tif (!!x[\"parseTreeNode\"]) {\n\t\t\t\tif (typeof x[\"parseTreeNode\"]!==\"object\");\n\t\t\t\telse this.JSONbuild(false,\"x\",\"name=\"+x.parseTreeNode.type,z+1);\n\t\t\t\t//x[\"name_xtransclude\"]=\"x\";\n\t\t\t}\t\t\n\t\t\tfor(var i in x){\n\t\t\t\tvar j = i;\n\t\t\t\tif (j.indexOf(\"name_\") >= 0) j =\"name_\"\n\t\t\t\tif (this.items.indexOf(j) >= 0)\n\t\t\t\t\tthis.JSONbuild(false,x[i],i,z+1)\n\t\t\t}\n\t\t}\n\t\tif(t==\"array\"){\n\t\t\tfor(var i=0;i<x.length;i++){\n\t\t\t\tthis.JSONbuild(false,x[i],i,z+1)\n\t\t\t}\n\t\t}\n\t\tif(divName){\n\t\t\tthis.build(divName,this.jsonResponder,this.JSONmem)\n\t\t\tif(!this.hasRunJSONbuildOnce){this.jsonResponder('json')}\n\t\t\tthis.hasRunJSONbuildOnce=true\n\t\t}\n\t}\n\tJSONeditor.treeBuilder.prototype.build=function(divName,todoFunc,data){\n\t\t//\n\t\t// divName is the id of the div we'll build the tree inside\n\t\t//\n\t\t// todoFunc - a function to call on label click with todo as parameter\n\t\t//\n\t\t// data should be an array of objects\n\t\t// each object should contain label,todo + level or id and pid (parentId)\n\t\t//\n\t\tvar self = this;\n\t\tvar d=data, n=divName, $=this.$, lastlevel=0, levelmem=[], im=this.images;\n\t\tthis.treeBaseDiv=divName\n\t\tif(!d){\n\t\t\tvar c=$(divName).childNodes;\n\t\t\tfor(var i=0;i<c.length;i++){\n\t\t\t\tif((c[i].tagName+\"\").toLowerCase()=='pre'){d=this.preParse(c[i])}\n\t\t\t};\n\t\t\tif(!d){return}\n\t\t};\n\t\t$(n).style.display=\"none\";\n\t\twhile ($(n).firstChild){$(n).removeChild($(n).firstChild)};\n\t\tfor(var i=0;i<d.length;i++){\n\t\t\tif(d[i].level && !lastlevel){lastlevel=d[i].level};\n\t\t\tif(d[i].level && d[i].level>lastlevel){levelmem.push(n);n=d[i-1].id};\n\t\t\tif(d[i].level && d[i].level>lastlevel+1){return 'Trying to jump levels!'};\n\t\t\tif(d[i].level && d[i].level<lastlevel){\n\t\t\t\tfor(var j=d[i].level;j<lastlevel;j++){n=levelmem.pop()}\n\t\t\t};\n\t\t\tif(!d[i].id){d[i].id=n+\"_\"+i};\n\t\t\tif(!d[i].pid){d[i].pid=n};\n\t\t\tlastlevel=d[i].level;\n\t\t\tvar a=document.createElement('div');\n\t\t\tvar t=document.createElement('span');\n\t\t\tt.style.verticalAlign='middle';\n\t\t\ta.style.whiteSpace='nowrap';\n\t\t\tvar t2=document.createTextNode(d[i].label);\n\t\t\tt.appendChild(t2);\n\t\t\ta.style.paddingLeft=d[i].pid==divName?'0px':im.nodeWidth+'px';\n\t\t\ta.style.cursor='pointer';\n\t\t\ta.style.display=(d[i].pid==divName)?'':'none';\n\t\t\ta.id=d[i].id;\n\t\t\ta.t=t;\n\t\t\t(function(){\n\t\t\t\tvar todo=d[i].todo;\n\t\t\t\t//var func=todoFunc;\n\t\t\t\ta.onclick=function(e){\n\t\t\t\t\tif(self.maniClick==\"giveItBack\"){return todo}\n\t\t\t\t\tif(self.selectedElement){\n\t\t\t\t\t\tself.selectedElement.style.fontWeight=\"\"\n\t\t\t\t\t}\n\t\t\t\t\tthis.style.fontWeight=\"bold\"\n\t\t\t\t\tself.selectedElement=this\n\t\t\t\t\tif(self.maniClick==\"selectIt\"){return}\n\t\t\t\t\tself.jsonResponder.call(self,todo);\n\t\t\t\t\tif (!e){e=window.event};\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\tif(e.stopPropagation){e.stopPropagation()};\n\t\t\t\t};\n\t\t\t\ta.onmouseover=function(e){\n\t\t\t\t\t//this.style.color=\"#999\"\n\t\t\t\t\tif (!e){e=window.event};\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\tif(e.stopPropagation){e.stopPropagation()};\n\t\t\t\t};\n\t\t\t\ta.onmouseout=function(e){\n\t\t\t\t\t//this.style.color=\"\"\n\t\t\t\t\tif (!e){e=window.event};\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\tif(e.stopPropagation){e.stopPropagation()};\n\t\t\t\t};\n\t\t\t}\n\t\t\t)();\n\t\t\t$(d[i].pid).appendChild(a);\n\t\t\tif(d[i].pid==divName && !a.previousSibling){a.first=true};\n\t\t};\n\t\t// calculate necessary element looks before initial display\n\t\tfor(var i=0;i<d.length;i++){var x=$(d[i].id);if(x && x.style.display!=\"none\"){this.setElementLook(x)}};\n\t\t$(divName).style.display=\"\";\n\t}\n\tJSONeditor.treeBuilder.prototype.setElementLook=function(m){\n\t\tvar $=this.$, im=this.images, self = this\n\t\tif(!m.inited){\n\t\t\tvar co=0\n\t\t\tfor(var j in im){\n\t\t\t\tif(!Object.prototype[j]){\n\t\t\t\t\tif(j==\"vertLine\"){break};\n\t\t\t\t\tvar img=document.createElement('img');\n\t\t\t\t\tvar k=(m.first && j.indexOf('Node')>=0)?j+'First':j;\n\t\t\t\t\timg.src=\"data:image/png;base64,\"+ $tw.wiki.getTiddlerText(im.path+(im[k]?im[k]:k+'.gif'));\n\t\t\t\t\timg.style.display=\"none\";\n\t\t\t\t\timg.style.verticalAlign=\"middle\";\n\t\t\t\t\timg.id=m.id+\"_\"+j;\n\t\t\t\t\tif(j.indexOf('folderNode')==0){\n\t\t\t\t\t\timg.onclick=function(e){\n\t\t\t\t\t\t\tself.openAndClose.call(self,this);\n\t\t\t\t\t\t\tif (!e){e=window.event};\n\t\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\t\tif(e.stopPropagation){e.stopPropagation()};\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tif(m.firstChild){m.insertBefore(img,m.childNodes[co]); co++}\n\t\t\t\t\telse {m.appendChild(img)};\n\t\t\t\t}\n\t\t\t};\n\t\t\tm.insertBefore(m.t,m.childNodes[co]);\n\t\t\tm.inited=true\n\t\t};\n\t\tvar lastChild=m.childNodes[m.childNodes.length-1];\n\t\tvar isParent=(lastChild.tagName+\"\").toLowerCase()==\"div\";\n\t\tvar isLast=!m.nextSibling;\n\t\tvar isOpen=isParent && lastChild.style.display!='none';\n\t\t$(m.id+\"_folder\").style.display=!isOpen && isParent?'':'none';\n\t\t$(m.id+\"_folderOpen\").style.display=isOpen && isParent?'':'none';\n\t\t$(m.id+\"_doc\").style.display=isParent?'none':'';\n\t\t$(m.id+\"_docNode\").style.display=isParent || isLast?'none':'';\n\t\t$(m.id+\"_docNodeLast\").style.display=isParent || !isLast?'none':'';\n\t\t$(m.id+\"_folderNode\").style.display=isOpen || !isParent || isLast?'none':'';\n\t\t$(m.id+\"_folderNodeLast\").style.display=isOpen || !isParent || !isLast?'none':'';\n\t\t$(m.id+\"_folderNodeOpen\").style.display=!isOpen || !isParent || isLast?'none':'';\n\t\t$(m.id+\"_folderNodeOpenLast\").style.display=!isOpen || !isParent || !isLast?'none':'';\n\t\tvar p=m.parentNode.nextSibling;\n\t\tif(p && p.id){\n\t\t\tvar sp=p;insideBase=false;\n\t\t\twhile(sp){if(sp==$(this.treeBaseDiv)){insideBase=true};sp=sp.parentNode}\n\t\t\tif(!insideBase){return}\n\t\t\tvar bg=\"data:image/png;base64,\"+ $tw.wiki.getTiddlerText(im.path+(im.vertLine?im.vertLine:'vertLine.gif'));\n\t\t\tm.style.backgroundImage='url('+bg+')';\n\t\t\tm.style.backgroundRepeat='repeat-y'\n\t\t};\n\t}\n\tJSONeditor.treeBuilder.prototype.openAndClose=function(x,remem){\n\t\tvar o, div=remem?this.$(x):x.parentNode;\n\t\tif(!div){return}\n\t\tif(remem){o=this.stateMem[div.id]}\n\t\telse {o=x.id.indexOf('Open')<0}\n\t\tif(remem==\"open\"){o=true}\n\t\tthis.stateMem[div.id]=o\n\t\tvar c=div.childNodes;\n\t\tfor(var i=0;i<c.length;i++){\n\t\t\tif(c[i].tagName.toLowerCase()!=\"div\"){continue};\n\t\t\tc[i].style.display=o?'':'none';\n\t\t\tif(o && !c[i].inited){this.setElementLook(c[i])}\n\t\t};\n\t\tthis.setElementLook(div)\n\t}\n\n\n\nJSONeditor.treeBuilder.prototype.JSONstring=\n{\n\tmake:function(arg,restore) {//\n\t\ttry {\n\t\treturn  JSON.stringify(arg,null,5);\n\t}catch(e) { return \"\"}\n\t}\n}\n})();\n"
        },
        "$:/plugins/bj/WidgetTreeViewer/folderOpen.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderOpen.gif",
            "module-type": "library",
            "text": "iVBORw0KGgoAAAANSUhEUgAAABYAAAAYCAYAAAD+vg1LAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAARwAAAEcBRwD1sgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAD3SURBVEiJ7dW/asJQFMfxr9ZG2kUQpCIV2qEdHFy6dcrW4uDzuP6SG3wXoVQQSin+mTv6Fn0FCUm62EHEJLeJW856zv3w4x4ut5YkCeeo+lnUCi4FltQuHZY0Bialwp7nvQAzwEmba9igklzgHWhmzeZOLGkELICrPPO5Ekt6BebAZd4gmYklPQNvNmgm7Pv+E/ABXNugkHIVkobAF9CyReFEYkkDYAmkPgIr2BjzAKyAzn/RI9gYcx9F0RroFkEP4CAI+nv0tigK++VJ6gFr4K4MFODCcZybOI43wKPl2W/XdT9PNRthGE6BHbC1hH/SmrXqM/2rX3uOOlkbl1khAAAAAElFTkSuQmCC"
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeFirst.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeFirst.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWAPcLAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wsALAAAAAAQABYAAAhLABcIHEiwoMGDCBMqXMiwIICHECEeBDCxosB/Ayka1LgAo0COBCn+GzlyAcWTGQd6NGmxY8qNLUNGjNiwJsiaDW/iXKhzZ8KeCwICADs="
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeOpenFirst.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeOpenFirst.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWAPcLAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wsALAAAAAAQABYAAAhBABcIHEiwoMGDCBMqXMiwIICHECEeBDCxokGKFy06XPCvY8cFFEMOxLgxo8mSKAlGXNmwJcmWLmHKfClzIc2BAQEAOw=="
        },
        "$:/plugins/bj/WidgetTreeViewer/folderNodeOpenLast.gif": {
            "type": "image/png",
            "title": "$:/plugins/bj/WidgetTreeViewer/folderNodeOpenLast.gif",
            "module-type": "library",
            "text": "R0lGODlhEAAWALMAAICAgP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///yH5BAEAAAEALAAAAAAQABYAAAQqMMhJq5Xg6n0z/xUgjmNnWl54qmggvG+QzVNK2fV66zVJgsCgcEgsGjURADs="
        }
    }
}